library(shiny)
runApp()
head(diamonds)
dataset <- diamonds
library(ggplot2)
dataset <- diamonds
head(diamonds)
p = ggplot(dataset, aes(x = carat, y = price, colour = cut)) + geom_line()
p
p = ggplot(dataset, aes(x = carat, y = price, colour = cut)) + geom_point()
p
runApp()
library(shiny)
library(ggplot2)
runApp()
runApp()
input = list(numClust = 4)
whiskies <- read.csv("whiskies.txt", row.names = 1, stringsAsFactors = FALSE)
whiskies_k <- scale(whiskies[2:13])  # rescale selected vars for kmeans
fit = kmeans(whiskies_k, input$numClust)
df = fit$centers
rownames(df)
dfOut = data.frame(Cluster = c(), Taste = c(), Value = c())
for(cl in 1:ncol(df))
{
tmpDf = data.frame(Cluster = rownames(df), Taste = colnames(df)[cl], Value = df[,cl])
dfOut = rbind(dfOut, tmpDf)
}
p = ggplot(dfOut, aes(x = Cluster, y = Value, fill = Taste)) + geom_bar()
p
p = ggplot(dfOut, aes(x = Cluster, y = Value, fill = Taste)) + geom_bar(stat="identity")
p
p = ggplot(dfOut, aes(x = Cluster, y = Value, fill = Taste)) +
geom_bar(stat="identity") +
facet_grid(. ~ Taste)
p
p = ggplot(dfOut, aes(x = Cluster, y = Value, fill = Taste)) +
geom_bar(stat="identity") +
facet_grid(. ~ Cluster)
p
p = ggplot(dfOut, aes(fill = Cluster, y = Value, x = Taste)) +
geom_bar(stat="identity") +
facet_grid(. ~ Cluster)
p
runApp()
runApp()
install.packages("shiny")
require(shiny)
runApp()
library("ggmap")
fit = kmeans(whiskies_k, input$numClust)
whiskies <- data.frame(whiskies, fit$cluster)
whiskies$fit.cluster <- as.factor(whiskies$fit.cluster)
filterWhiskies = whiskies
filterWhiskies <- cbind(filterWhiskies, geocode(paste(whiskies$Location, "Scotland", sep = " ,")))
whiskyMap <- qmap(location = "Scotland", zoom = 6, legend = "topleft", maptype = "terrain",
color = "bw", darken = 0.5)
whiskyMap + geom_point(data = filterWhiskies, aes(x = filterWhiskies.Latitude, y = filterWhiskies.Longitude,
colour = fit.cluster, size = 2))
head(filterWhiskies)
whiskyMap + geom_point(data = filterWhiskies, aes(x = lat, y = lat,
colour = fit.cluster, size = 2))
filterWhiskies <- cbind(filterWhiskies, geocode(paste(filterWhiskies$Location, "Scotland", sep = " ,")))
head(filterWhiskies)
whiskies <- read.csv("whiskies.txt", row.names = 1, stringsAsFactors = FALSE)
whiskies_k <- scale(whiskies[2:13])  # rescale selected vars for kmeans
fit = kmeans(whiskies_k, input$numClust)
whiskies <- data.frame(whiskies, fit$cluster)
whiskies$fit.cluster <- as.factor(whiskies$fit.cluster)
filterWhiskies = whiskies
filterWhiskies <- cbind(filterWhiskies, geocode(paste(filterWhiskies$Location, "Scotland", sep = " ,")))
whiskyMap <- qmap(location = "Scotland", zoom = 6, legend = "topleft", maptype = "terrain",
color = "bw", darken = 0.5)
whiskyMap + geom_point(data = filterWhiskies, aes(x = lat, y = lat,
colour = fit.cluster, size = 2))
head(filterWhiskies)
whiskyMap <- qmap(location = "Scotland", zoom = 6, legend = "topleft", maptype = "terrain",
color = "bw", darken = 0.5)
whiskyMap + geom_point(data = filterWhiskies, aes(x = whiskies.Latitude,  y = whiskies.Longitude,
colour = fit.cluster, size = 2))
whiskyMap + geom_point(data = filterWhiskies, aes(x = filterWhiskies.Latitude,  y = filterWhiskies.Longitude,
colour = fit.cluster, size = 2))
whiskies <- cbind(whiskies, geocode(paste(whiskies$Location, "Scotland", sep = " ,")))
whiskyMap <- qmap(location = "Scotland", zoom = 6, legend = "topleft", maptype = "terrain",
color = "bw", darken = 0.5)
whiskyMap + geom_point(data = whiskies, aes(x = whiskies.Latitude, y = whiskies.Longitude,
colour = fit.cluster, size = 2))
whiskies.coord <- data.frame(whiskies$Latitude, whiskies$Longitude)
coordinates(whiskies.coord) = ~whiskies.Latitude + whiskies.Longitude
library(maptools)
library(rgdal)
whiskies.coord <- data.frame(whiskies$Latitude, whiskies$Longitude)
coordinates(whiskies.coord) = ~whiskies.Latitude + whiskies.Longitude
proj4string(whiskies.coord) = CRS("+init=epsg:27700")  # Specify that our coords are in osgb grid coord
whiskies.coord <- spTransform(whiskies.coord, CRS("+init=epsg:4326"))  # spTransform to convert osgb grid to lat/lon
whiskies <- cbind(whiskies, whiskies.coord)
whiskies <- cbind(whiskies, geocode(paste(whiskies$Location, "Scotland", sep = " ,")))
whiskyMap <- qmap(location = "Scotland", zoom = 6, legend = "topleft", maptype = "terrain",
color = "bw", darken = 0.5)
whiskyMap + geom_point(data = whiskies, aes(x = whiskies.Latitude, y = whiskies.Longitude,
colour = fit.cluster, size = 2))
require(shiny)
runApp()
devtools::install_github('rstudio/shinyapps')
library(shinyapps)
deployApp(appName="whiskyTastings")
shinyapps::setAccountInfo(name="ojessen", token="A1A410F27E8010CD344BBCF53E70E251", secret="vVH28aw5J9T4mztBQO1xhpLJkH0qZPfEFWKeBbjm")
deployApp(appName="whiskyTastings")
runApp()
deployApp(appName="whiskyTastings")
deployApp(appName="whiskyTastings")
shinyapps::configureApp("whiskyTastings", size="medium")
runApp()
whiskies <- read.csv("whiskies.txt", row.names = 1, stringsAsFactors = FALSE)
whiskies_k <- scale(whiskies[2:13])  # rescale selected vars for kmeans
fit = kmeans(whiskies_k, input$numClust)
input = list(numClust = 4)
fit = kmeans(whiskies_k, input$numClust)
whiskies <- data.frame(whiskies, fit$cluster)
whiskies[which(whiskies$fit.cluster == input$whichClust),1]
head(whiskies)
input$whichClust
input$whichClust = 1
whiskies[which(whiskies$fit.cluster == input$whichClust),1]
whiskies[which(whiskies$fit.cluster == input$whichClust),1, drop = FALSE]
runApp()
deployApp(appName="whiskyTastings")
t(fit)
t(fit$centers)
runApp()
deployApp(appName="whiskyTastings")
runApp()
deployApp(appName="whiskyTastings")
